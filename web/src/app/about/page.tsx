// src/app/about/page.tsx
import Link from "next/link";

export const metadata = {
  title: "About | Speech Intonation Analyzer",
  description: "Project documentation and overview aligned with the proposal",
};

const Badge = ({ children }: { children: React.ReactNode }) => (
  <span className="inline-flex items-center gap-1 rounded-md bg-white/5 px-3 py-1 text-sm text-gray-200 ring-1 ring-white/10">
    {children}
  </span>
);

const Section = ({
  title,
  icon,
  children,
}: {
  title: string;
  icon: string;
  children: React.ReactNode;
}) => (
  <section className="neu-surface rounded-2xl px-6 py-6 md:px-8 md:py-8">
    <div className="mb-5 flex items-center gap-2">
      <span className="material-symbols-outlined text-primary">{icon}</span>
      <h3 className="text-lg font-semibold text-white">{title}</h3>
    </div>
    <div className="text-gray-300 leading-relaxed">{children}</div>
  </section>
);

export default function AboutPage() {
  return (
    <div className="min-h-screen bg-background-light text-gray-200 font-display">
      {/* Header */}
      <div className="px-6 py-5">
        <div className="mx-auto max-w-6xl flex items-center justify-between">
          <div className="flex items-center gap-3">
            <span className="material-symbols-outlined text-primary text-2xl">description</span>
            <span className="font-semibold">Project Documentation</span>
          </div>
          <div className="flex items-center gap-2">
            <Link
              href="/"
              className="rounded-lg bg-white/5 px-3 py-2 text-sm hover:bg-white/10 transition"
            >
              Home
            </Link>
            <Link
              href="/analyze"
              className="rounded-lg bg-primary px-4 py-2 text-sm font-semibold text-white hover:bg-primary/90 transition"
            >
              Start Analyze
            </Link>
          </div>
        </div>
      </div>

      {/* Content */}
      <main className="mx-auto max-w-6xl px-6 pb-20 space-y-8">
        {/* Hero / Intro */}
        <div className="relative overflow-hidden rounded-2xl bg-gradient-to-br from-white/[0.03] to-transparent ring-1 ring-white/10 p-8 md:p-10">
          <div className="absolute -left-24 -top-24 h-72 w-72 rounded-full bg-primary/20 blur-3xl" />
          <div className="absolute -right-24 -bottom-24 h-72 w-72 rounded-full bg-secondary/20 blur-3xl" />
          <h1 className="text-3xl md:text-4xl font-extrabold text-white">
            Speech Intonation Analyzer ‚Äî <span className="text-primary">About</span>
          </h1>
          <p className="mt-3 max-w-3xl text-gray-300">
            ‡∏™‡∏£‡∏∏‡∏õ‡πÅ‡∏ô‡∏ß‡∏Ñ‡∏¥‡∏î ‡∏™‡∏ñ‡∏≤‡∏õ‡∏±‡∏ï‡∏¢‡∏Å‡∏£‡∏£‡∏° ‡πÅ‡∏•‡∏∞‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ï‡∏≤‡∏°‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ Proposal
            ‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏ó‡∏µ‡πà‡∏Å‡∏≤‡∏£‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏ô‡∏∏‡∏°‡∏≤‡∏ô‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÄ‡∏°‡∏ï‡∏£‡∏¥‡∏Å‡∏î‡πâ‡∏≤‡∏ô Prosody
            ‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÅ‡∏ö‡∏ö‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÅ‡∏≠‡∏Ñ‡∏ó‡∏µ‡∏ü
          </p>
          <div className="mt-5 flex flex-wrap gap-2">
            <Badge>Next.js 15 (App Router)</Badge>
            <Badge>TypeScript</Badge>
            <Badge>TailwindCSS v4</Badge>
            <Badge>Web Audio API</Badge>
            <Badge>Chart.js (UI Spec)</Badge>
          </div>
        </div>

        {/* Objective (‡∏ï‡∏≤‡∏° Proposal) */}
        <Section title="Objective (‡∏ï‡∏≤‡∏° Proposal)" icon="target">
          <ul className="list-inside space-y-2">
            <li>
              üéØ ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå <strong>‡∏ô‡πâ‡∏≥‡πÄ‡∏™‡∏µ‡∏¢‡∏á</strong> ‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏û‡∏π‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏∞‡∏ö‡∏∏{" "}
              <strong>‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå (Emotion Recognition)</strong> ‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏° 7 ‡∏Ñ‡∏•‡∏≤‡∏™:
              <em> Angry, Disgust, Fear, Happy, Neutral, Sad, Surprise</em>
            </li>
            <li>
              üìà ‡∏ß‡∏±‡∏î <strong>Prosody Metrics</strong> ‡∏´‡∏•‡∏±‡∏Å ‡πÑ‡∏î‡πâ‡πÅ‡∏Å‡πà Average Pitch (Hz), Energy (RMS),
              Speech Rate (WPM)
            </li>
            <li>
              üñºÔ∏è ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• <strong>Pitch/Energy over time</strong> ‡∏î‡πâ‡∏ß‡∏¢‡∏Å‡∏£‡∏≤‡∏ü‡∏≠‡∏¥‡∏ô‡πÄ‡∏ó‡∏≠‡∏£‡πå‡πÅ‡∏≠‡∏Ñ‡∏ó‡∏µ‡∏ü ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡∏ï‡∏µ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏ô‡∏ß‡πÇ‡∏ô‡πâ‡∏°
            </li>
          </ul>
        </Section>

        {/* Tech Stack */}
        <Section title="Tech Stack" icon="deployed_code">
          <div className="grid gap-4 md:grid-cols-2">
            <div>
              <h4 className="mb-2 font-semibold text-white">Frontend</h4>
              <ul className="list-disc ml-5 space-y-1">
                <li>Next.js 15 (App Router), TypeScript</li>
                <li>TailwindCSS v4 + Custom Theme</li>
                <li>Web Audio API (MediaRecorder, AudioContext, AnalyserNode)</li>
                <li>
                  Chart.js (‡∏£‡∏∞‡∏ö‡∏∏‡πÑ‡∏ß‡πâ‡πÉ‡∏ô Proposal) ‚Äî ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏´‡∏ô‡πâ‡∏≤ Results ‡πÉ‡∏ä‡πâ{" "}
                  <em>Canvas 2D</em> ‡∏ß‡∏≤‡∏î‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ö‡∏ö custom ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ö‡∏≤‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∏‡∏°‡∏™‡πÑ‡∏ï‡∏•‡πå‡πÑ‡∏î‡πâ‡∏™‡∏π‡∏á
                </li>
              </ul>
            </div>
            <div>
              <h4 className="mb-2 font-semibold text-white">Backend / API</h4>
              <ul className="list-disc ml-5 space-y-1">
                <li>Route Handler <code className="text-gray-400">/api/analyze</code> (Node runtime)</li>
                <li>‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á (multipart/form-data) + duration</li>
                <li>‡∏Ñ‡∏∑‡∏ô‡∏ú‡∏•‡πÅ‡∏ö‡∏ö JSON (emotion distribution, prosody, time series)</li>
              </ul>
            </div>
          </div>
        </Section>

        {/* Dataset & Scope (‡∏ï‡∏≤‡∏° Proposal) */}
        <Section title="Datasets & Scope" icon="dataset">
          <ul className="list-disc ml-5 space-y-2">
            <li>
              üóÇÔ∏è <strong>Datasets (‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á Proposal):</strong> CREMA-D, RAVDESS ‡πÅ‡∏•‡∏∞‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏õ‡πâ‡∏≤‡∏¢‡∏Å‡∏≥‡∏Å‡∏±‡∏ö‡∏≠‡∏≤‡∏£‡∏°‡∏ì‡πå
              ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏ó‡∏£‡∏ô/‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô‡∏ú‡∏•‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏û‡∏π‡∏î
            </li>
            <li>
              üåê <strong>‡∏†‡∏≤‡∏©‡∏≤:</strong> ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏©‡∏≤‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©‡∏Å‡πà‡∏≠‡∏ô ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÅ‡∏ú‡∏ô‡∏Ç‡∏¢‡∏≤‡∏¢‡πÑ‡∏õ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢/‡∏™‡∏≥‡πÄ‡∏ô‡∏µ‡∏¢‡∏á‡∏≠‡∏∑‡πà‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
            </li>
            <li>
              üîé <strong>Preprocessing (‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ï‡∏≤‡∏° Proposal):</strong> Resampling, Framing, FFT, MFCCs
              ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏ó‡∏µ‡πà‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏£‡∏π‡πâ‡πÑ‡∏î‡πâ
            </li>
          </ul>
        </Section>

        {/* Core Components */}
        <Section title="Core Components" icon="widgets">
          <div className="grid gap-4 md:grid-cols-3">
            <div className="rounded-xl bg-white/5 p-4 ring-1 ring-white/10">
              <div className="mb-2 flex items-center gap-2">
                <span className="material-symbols-outlined text-secondary">mic</span>
                <h4 className="font-semibold text-white">Recorder</h4>
              </div>
              <p className="text-gray-300 text-sm">
                ‡∏à‡∏±‡∏ö‡πÄ‡∏™‡∏µ‡∏¢‡∏á/‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå ‡πÅ‡∏™‡∏î‡∏á Waveform (‡∏ú‡πà‡∏≤‡∏ô AnalyserNode) + VU Meter ‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏à‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
              </p>
            </div>
            <div className="rounded-xl bg-white/5 p-4 ring-1 ring-white/10">
              <div className="mb-2 flex items-center gap-2">
                <span className="material-symbols-outlined text-accent">sync_alt</span>
                <h4 className="font-semibold text-white">Analyze</h4>
              </div>
              <p className="text-gray-300 text-sm">
                ‡∏™‡πà‡∏á‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á API <code className="text-gray-400">/api/analyze</code> ‡∏£‡∏±‡∏ö‡∏ú‡∏• Emotion Distribution +
                Prosody + Time Series
              </p>
            </div>
            <div className="rounded-xl bg-white/5 p-4 ring-1 ring-white/10">
              <div className="mb-2 flex items-center gap-2">
                <span className="material-symbols-outlined text-primary">monitoring</span>
                <h4 className="font-semibold text-white">Results</h4>
              </div>
              <p className="text-gray-300 text-sm">
                Dashboard ‡πÅ‡∏™‡∏î‡∏á Primary Emotion, Distribution, Prosody ‡πÅ‡∏•‡∏∞‡∏Å‡∏£‡∏≤‡∏ü Pitch/Energy ‡∏û‡∏£‡πâ‡∏≠‡∏° Export PNG
              </p>
            </div>
          </div>
        </Section>

        {/* Model Plan (‡∏ï‡∏≤‡∏° Proposal) */}
        <Section title="Model Plan (‡∏ï‡∏≤‡∏° Proposal)" icon="neurology">
          <ul className="list-disc ml-5 space-y-2">
            <li>
              üß† ‡πÇ‡∏Ñ‡∏£‡∏á‡∏£‡πà‡∏≤‡∏á‡πÇ‡∏°‡πÄ‡∏î‡∏•: <strong>CNN + BiLSTM</strong> ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏™‡πÄ‡∏õ‡∏Å‡πÇ‡∏ï‡∏£‡πÅ‡∏Å‡∏£‡∏°/‡∏•‡∏≥‡∏î‡∏±‡∏ö‡πÄ‡∏ß‡∏•‡∏≤
            </li>
            <li>
              üî¨ ‡∏ï‡∏±‡∏ß‡∏ä‡∏µ‡πâ‡∏ß‡∏±‡∏î‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: <strong>Accuracy, Precision, Recall, F1-score</strong> ‡πÅ‡∏•‡∏∞{" "}
              Confusion Matrix
            </li>
            <li>
              ‚öôÔ∏è ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô‡πÄ‡∏î‡πÇ‡∏°‡πÉ‡∏ä‡πâ Mock Engine ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏î‡∏™‡∏≠‡∏ö UI/UX ‚Äî ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏•‡πâ‡∏ß
              API ‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡πâ‡∏≤ Results ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
            </li>
          </ul>
        </Section>

        {/* Infographic / Flow Diagram */}
        <Section title="System Flow (Infographic)" icon="route">
          <div className="rounded-xl bg-white/5 p-5 ring-1 ring-white/10">
            <div className="grid gap-6 md:grid-cols-3 items-center">
              <CardNode title="Recorder" icon="mic">
                ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏™‡∏µ‡∏¢‡∏á / ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå <br />+ Waveform + Timer
              </CardNode>

              <Arrow />

              <CardNode title="/api/analyze" icon="dns">
                ‡∏£‡∏±‡∏ö‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á <br />‚Üí ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•/‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ú‡∏• <br />‚Üí ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö JSON
              </CardNode>

              <div className="md:col-span-3 flex justify-center my-2">
                <Arrow down />
              </div>

              <div className="md:col-span-3">
                <CardNode title="Results Dashboard" icon="insights">
                  Primary Emotion ‚Ä¢ Distribution ‚Ä¢ Prosody ‚Ä¢ Chart Export
                </CardNode>
              </div>
            </div>
          </div>
        </Section>

        {/* Mock AI (‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πà‡∏≤‡∏á‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏î‡πÇ‡∏°‡∏Å‡∏±‡∏ö‡∏Ç‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á) */}
        <Section title="Mock AI Engine (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏î‡πÇ‡∏°)" icon="science">
          <p>
            ‡πÄ‡∏ß‡∏≠‡∏£‡πå‡∏ä‡∏±‡∏ô‡πÄ‡∏î‡πÇ‡∏°‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô{" "}
            <code className="text-gray-400">makeMockResult()</code>{" "}
            ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Ñ‡πà‡∏≤ <em>emotion distribution</em>, <em>prosody</em> ‡πÅ‡∏•‡∏∞ series (pitch/energy) ‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏£‡∏π‡∏õ‡∏ó‡∏£‡∏á‡∏™‡∏°‡∏à‡∏£‡∏¥‡∏á
            ‡∏à‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏µ‡∏ß‡∏¥‡∏ß UX/UI ‡πÅ‡∏•‡∏∞‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≥‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏à‡∏£‡∏¥‡∏á‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
          </p>
        </Section>

        {/* Team */}
        <Section title="Team / Contributors" icon="group">
          <ul className="grid gap-3 md:grid-cols-2">
            {[
              "6520501093 ‡∏ô‡∏≤‡∏¢‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏±‡∏ì‡∏´‡πå ‡∏™‡∏∏‡πÄ‡∏ä‡∏≤‡∏ß‡πå‡∏≠‡∏¥‡∏ô‡∏ó‡∏£‡πå",
              "6520503380 ‡∏ô‡∏≤‡∏¢‡∏õ‡∏ì‡∏ß‡∏±‡∏í‡∏ô‡πå ‡∏≠‡∏∏‡πà‡∏ô‡∏≠‡∏∏‡∏î‡∏°",
              "6520503525 ‡∏ô‡∏≤‡∏¢‡∏≠‡∏ô‡∏±‡∏ô‡∏ï‡πå‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå ‡∏£‡∏∏‡∏à‡∏¥‡πÄ‡∏à‡∏£‡∏¥‡∏ç‡∏ß‡∏á‡∏®‡πå",
            ].map((name) => (
              <li key={name} className="flex items-center gap-2">
                <span className="material-symbols-outlined text-primary">person</span>
                <span className="text-gray-200">{name}</span>
              </li>
            ))}
          </ul>
        </Section>

        {/* Future Plan (‡∏ï‡∏≤‡∏° Proposal + ‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î) */}
        <Section title="Future Plan" icon="lightbulb">
          <ul className="list-disc ml-5 space-y-2">
            <li>
              ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏à‡∏£‡∏¥‡∏á (‡πÄ‡∏ä‡πà‡∏ô <strong>TensorFlow.js</strong> ‡∏´‡∏£‡∏∑‡∏≠ Python backend ‡∏ú‡πà‡∏≤‡∏ô REST/gRPC)
            </li>
            <li>‡∏à‡∏±‡∏î‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤ Model Metrics (Confusion Matrix, PR/F1, ROC ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)</li>
            <li>‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏†‡∏≤‡∏©‡∏≤/‡∏™‡∏≥‡πÄ‡∏ô‡∏µ‡∏¢‡∏á ‡πÅ‡∏•‡∏∞‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏•‡πÑ‡∏ó‡∏°‡πå</li>
            <li>‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏´‡∏°‡∏î‡∏ù‡∏∂‡∏Å‡∏ã‡πâ‡∏≠‡∏° (Practice Chat) ‡πÉ‡∏´‡πâ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏ä‡∏¥‡∏á‡πÇ‡∏ï‡πâ‡∏ï‡∏≠‡∏ö</li>
          </ul>
        </Section>

        {/* CTA */}
        <div className="flex flex-wrap items-center justify-between gap-3 rounded-2xl bg-white/5 p-6 ring-1 ring-white/10">
          <p className="text-gray-300">
            ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏ó‡∏î‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô? ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÄ‡∏™‡∏µ‡∏¢‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
          </p>
          <div className="flex gap-2">
            <Link
              href="/analyze"
              className="rounded-lg bg-primary px-4 py-2 font-semibold text-white hover:bg-primary/90 transition"
            >
              Go to Analyze
            </Link>
            <Link
              href="/results"
              className="rounded-lg bg-white/5 px-4 py-2 hover:bg-white/10 transition"
            >
              View Results
            </Link>
          </div>
        </div>
      </main>
    </div>
  );
}

/* ---------- small presentational helpers ---------- */

function CardNode({
  title,
  icon,
  children,
}: {
  title: string;
  icon: string;
  children: React.ReactNode;
}) {
  return (
    <div className="mx-auto w-full max-w-md rounded-xl bg-black/30 p-5 ring-1 ring-white/10">
      <div className="mb-2 flex items-center gap-2">
        <span className="material-symbols-outlined text-secondary">{icon}</span>
        <h4 className="font-semibold text-white">{title}</h4>
      </div>
      <p className="text-sm text-gray-300">{children}</p>
    </div>
  );
}

function Arrow({ down = false }: { down?: boolean }) {
  return (
    <div
      className={`mx-auto flex h-12 w-12 items-center justify-center rounded-full bg-white/5 ring-1 ring-white/10 ${
        down ? "rotate-90 md:rotate-180" : ""
      }`}
      aria-hidden
    >
      <span className="material-symbols-outlined text-gray-300">trending_flat</span>
    </div>
  );
}
